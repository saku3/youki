#!/usr/bin/env bpftrace

BEGIN
{
    printf("Tracing runc syscalls... Hit Ctrl-C to end.\n");
    printf("%-12s %15s %-8s %-9s %s\n", "TIME", "COMMAND", "PID", "EVENT", "CONTENT");
}

tracepoint:syscalls:sys_enter_write
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    $s = str(args->buf, 120);
    if ($s != "\n") {
        printf("%-12ld %15s %-8d %-9s ", elapsed, comm, pid, "write");
        printf("fd=%d, %s\n", args->fd, $s);
    }
}

tracepoint:syscalls:sys_enter_open,
tracepoint:syscalls:sys_enter_openat
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    @filename[tid] = str(args->filename, 64);
}

tracepoint:syscalls:sys_exit_open,
tracepoint:syscalls:sys_exit_openat
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    $ret = args->ret;
    $fd = $ret >= 0 ? $ret : -1;
    $errno = $ret >= 0 ? 0 : -$ret;

    printf("%-12ld %15s %-8d %-9s ", elapsed, comm, pid, "open");
    printf("errno=%d, fd=%d, file=%s\n", $errno, $fd, @filename[tid]);
    delete(@filename[tid]);
}

tracepoint:syscalls:sys_enter_clone3
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    printf("%-12ld %15s %-8d %-9s\n", elapsed, comm, pid, "clone3");
}

tracepoint:syscalls:sys_enter_setns
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    printf("%-12ld %15s %-8d %-9s ", elapsed, comm, pid, "setns");
    printf("fd=%d, flag=%d\n", args->fd, args->flags);
}

tracepoint:syscalls:sys_enter_capset
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    printf("%-12ld %15s %-8d %-9s\n", elapsed, comm, pid, "capset");
}

tracepoint:syscalls:sys_enter_pivot_root
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    printf("%-12ld %15s %-8d %-9s ", elapsed, comm, pid, "pivt_root");
    printf("new_root=%s, put_old=%s\n", str(args->new_root, 64), str(args->put_old, 64));
}

tracepoint:syscalls:sys_enter_mount
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    printf("%-12ld %15s %-8d %-9s ", elapsed, comm, pid, "mount");
    printf("dev_name=%s, dir_name=%s\n", str(args->dev_name, 120), str(args->dir_name, 120));
}

tracepoint:syscalls:sys_enter_setresuid
/comm == "runc" || comm == "runc:[0:PARENT]" || comm == "runc:[1:CHILD]" || comm == "runc:[2:INIT]"/
{
    printf("%-12ld %15s %-8d %-9s ", elapsed, comm, pid, "setresuid");
    printf("ruid=%d, euid=%d, suid=%d\n", args->ruid, args->euid, args->suid);
}

END
{
    clear(@filename);
    printf("Tracing ended.\n");
}
