runc create (no limits + no cgrouppath + no permission) succeeds
runc exec (limits + cgrouppath + permission on the cgroup dir) succeeds
runc run (cpu.idle)
runc run (cgroup v2 resources.unified override)
runc create
runc create --pid-file
runc create --pid-file with new CWD
runc create [shared pidns + rootless]
runc exec --user with no access to cwd
runc create can chdir if runc has access
runc delete --force
runc delete --force ignore not exist
runc delete [host pidns + init gone]
runc delete --force [host pidns + init gone]
runc delete --force [paused container]
runc run [redundant default /dev/ptmx]
non-empty HOME env is used
env var override is set only once
env var override
runc exec
runc exec --pid-file
runc exec --pid-file with new CWD
runc exec --env
runc exec --user vs /dev/null ownership
ps
ps -f json
ps after the container stopped
runc run with RLIMIT_NOFILE(Bigger than system's hard value)
runc run with RLIMIT_NOFILE(Smaller than system's hard value)
global --root
runc run
runc run [hostname domainname]
runc run check default home
runc run [seccomp] (SCMP_ACT_NOTIFY noNewPrivileges true)
runc run [seccomp] (SCMP_ACT_NOTIFY important syscalls noNewPrivileges true)
runc run [seccomp] (ignore listener path if no notify act)
runc run [seccomp] (SCMP_ACT_NOTIFY empty listener path and notify act)
runc run [seccomp] (SCMP_ACT_NOTIFY wrong listener path)
runc run [seccomp] (SCMP_ACT_NOTIFY wrong abstract listener path)
runc run [seccomp] (SCMP_ACT_NOTIFY write)
runc run [seccomp] (SCMP_ACT_NOTIFY startContainer hook)
runc run [seccomp] (SCMP_ACT_NOTIFY example config)
runc run [seccomp defaultErrnoRet=ENXIO]
runc run [seccomp] (SCMP_ACT_KILL)
runc run (no selinux label)
runc run (custom selinux label)
runc run (session keyring security label)
runc exec (session keyring security label)
spec generation cwd
spec generation --bundle
spec validator
runc start
runc run detached
runc run detached ({u,g}id != 0)
runc run detached --pid-file
runc run detached --pid-file with new CWD
runc run
runc run ({u,g}id != 0)
runc run with rootfs set to .
runc run --pid-file
runc run [rootless with host pidns]
runc run [redundant seccomp rules]
state (kill + delete)
state (pause + resume)
set cpu period with no quota
set cpu quota with no period
update cgroup v2 resources via unified map
update cpuset parameters via resources.CPU
update cpuset parameters via v2 unified map
update devices [minimal transition rules]
update paused container
userns with simple mount
